


ZMORE(1)                                                 ZMORE(1)


NNAAMMEE
       zmore  - file perusal filter for crt viewing of compressed
       text

SSYYNNOOPPSSIISS
       zzmmoorree [ name ...  ]

DDEESSCCRRIIPPTTIIOONN
       _Z_m_o_r_e is a filter which allows examination  of  compressed
       or plain text files one screenful at a time on a soft-copy
       terminal.  _z_m_o_r_e works on files compressed with  _c_o_m_p_r_e_s_s_,
       _p_a_c_k  or  _g_z_i_p_, and also on uncompressed files.  If a file
       does not exist, _z_m_o_r_e looks for a file of  the  same  name
       with the addition of a .gz, .z or .Z suffix.

       _Z_m_o_r_e  normally  pauses  after  each  screenful,  printing
       --More-- at the bottom of the screen.  If  the  user  then
       types  a  carriage return, one more line is displayed.  If
       the user hits a space,  another  screenful  is  displayed.
       Other possibilities are enumerated later.

       _Z_m_o_r_e looks in the file _/_e_t_c_/_t_e_r_m_c_a_p to determine terminal
       characteristics, and to determine the default window size.
       On  a terminal capable of displaying 24 lines, the default
       window size is 22 lines.  To use a pager  other  than  the
       default  _m_o_r_e_,  set environment variable PAGER to the name
       of the desired program, such as _l_e_s_s_.

       Other sequences which may be typed when _z_m_o_r_e pauses,  and
       their  effects,  are  as follows (_i is an optional integer
       argument, defaulting to 1) :


       _i<space>
              display _i more lines, (or another screenful  if  no
              argument is given)


       ^D     display  11  more  lines  (a  ``scroll'').  If _i is
              given, then the scroll size is set to _i.


       d      same as ^D (control-D)


       _iz     same as typing a space except that _i,  if  present,
              becomes  the new window size.  Note that the window
              size reverts back to the default at the end of  the
              current file.


       _is     skip _i lines and print a screenful of lines





                                                                1





ZMORE(1)                                                 ZMORE(1)


       _if     skip _i screenfuls and print a screenful of lines


       q or Q quit  reading  the  current file; go on to the next
              (if any)


       e or q When  the  prompt  --More--(Next  file:  _f_i_l_e)   is
              printed, this command causes zmore to exit.


       s      When   the  prompt  --More--(Next  file:  _f_i_l_e)  is
              printed, this command causes zmore to skip the next
              file and continue.


       =      Display the current line number.


       _i/expr search  for  the  _i-th  occurrence  of  the regular
              expression _e_x_p_r_.  If  the  pattern  is  not  found,
              _z_m_o_r_e  goes  on  to the next file (if any).  Other-
              wise, a screenful is displayed, starting two  lines
              before  the  place  where the expression was found.
              The user's erase and kill characters may be used to
              edit the regular expression.  Erasing back past the
              first column cancels the search command.


       _in     search for the _i-th occurrence of the last  regular
              expression entered.


       !command
              invoke  a shell with _c_o_m_m_a_n_d.  The character `!' in
              "command" are replaced with the previous shell com-
              mand.  The sequence "\!" is replaced by "!".


       :q or :Q
              quit  reading  the  current file; go on to the next
              (if any) (same as q or Q).


       .      (dot) repeat the previous command.

       The commands take effect immediately, i.e., it is not nec-
       essary to type a carriage return.  Up to the time when the
       command character itself is given, the user  may  hit  the
       line kill character to cancel the numerical argument being
       formed.  In addition, the user may hit the erase character
       to redisplay the --More-- message.

       At any time when output is being sent to the terminal, the



                                                                2





ZMORE(1)                                                 ZMORE(1)


       user can hit the quit  key  (normally  control-\).   _Z_m_o_r_e
       will  stop  sending  output,  and  will  display the usual
       --More-- prompt.  The user may then enter one of the above
       commands in the normal manner.  Unfortunately, some output
       is lost when this is done, due to the fact that any  char-
       acters  waiting in the terminal's output queue are flushed
       when the quit signal occurs.

       The terminal is set to _n_o_e_c_h_o mode by this program so that
       the output can be continuous.  What you type will thus not
       show on your terminal, except for the / and !  commands.

       If the standard output is not a teletype, then _z_m_o_r_e  acts
       just  like  _z_c_a_t_,  except  that a header is printed before
       each file.

FFIILLEESS
       /etc/termcap        Terminal data base

SSEEEE AALLSSOO
       more(1), gzip(1), zdiff(1), zgrep(1), znew(1),  zforce(1),
       gzexe(1)



































                                                                3


