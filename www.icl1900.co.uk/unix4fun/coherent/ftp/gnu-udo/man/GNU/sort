


SORT(1L)                                                 SORT(1L)


NNAAMMEE
       sort - sort lines of text files

SSYYNNOOPPSSIISS
       ssoorrtt  [-cmus] [-t separator] [-o output-file] [-T tempdir]
       [-bdfiMnr] [+POS1 [-POS2]] [-k POS1[,POS2]] [file...]
       ssoorrtt {--help,--version}

DDEESSCCRRIIPPTTIIOONN
       This manual page documents the GNU version of ssoorrtt.   ssoorrtt
       sorts,  merges,  or  compares all the lines from the given
       files, or the standard input if no  files  are  given.   A
       file  name  of `-' means standard input.  By default, ssoorrtt
       writes the results to the standard output.

       ssoorrtt has three modes of  operation:  sort  (the  default),
       merge,  and  check  for sortedness.  The following options
       change the operation mode:

       _-_c     Check whether the given files are  already  sorted:
              if  they are not all sorted, print an error message
              and exit with a status of 1.

       _-_m     Merge the given files by sorting them as  a  group.
              Each  input  file  should  already  be individually
              sorted.  It always works to sort instead of  merge;
              merging  is  provided  because it is faster, in the
              case where it works.

       A pair of lines is compared as follows: if any key  fields
       have been specified, ssoorrtt compares each pair of fields, in
       the order specified on the command line, according to  the
       associated  ordering  options, until a difference is found
       or no fields are left.

       If any of the global options _M_b_d_f_i_n_r are given but no  key
       fields  are  specified,  ssoorrtt  compares  the  entire lines
       according to the global options.

       Finally, as a last resort when all keys compare equal  (or
       if  no  ordering options were specified at all), ssoorrtt com-
       pares  the  lines  byte  by  byte  in  machine   collating
       sequence.  The last resort comparison honors the _-_r global
       option.  The _-_s (stable) option disables this  last-resort
       comparison so that lines in which all fields compare equal
       are left in their original relative order.  If  no  fields
       or global options are specified, _-_s has no effect.

       GNU  ssoorrtt  has  no limits on input line length or restric-
       tions on bytes allowed within lines.  In addition, if  the
       final  byte  of  an  input file is not a newline, GNU ssoorrtt
       silently supplies one.

       If the environment variable TTMMPPDDIIRR is set, ssoorrtt uses it as



FSF                     GNU Text Utilities                      1





SORT(1L)                                                 SORT(1L)


       the  directory  in which to put temporary files instead of
       the default, /tmp.  The _-_T _t_e_m_p_d_i_r option is  another  way
       to  select the directory for temporary files; it overrides
       the environment variable.

       The following options affect the ordering of output lines.
       They  may  be  specified globally or as part of a specific
       key field.  If no key fields are specified, global options
       apply  to comparison of entire lines; otherwise the global
       options are inherited by key fields that  do  not  specify
       any special options of their own.

       _-_b     Ignore  leading  blanks  when  finding sort keys in
              each line.

       _-_d     Sort in `phone directory' order: ignore all charac-
              ters  except  letters, digits and blanks when sort-
              ing.

       _-_f     Fold lower  case  characters  into  the  equivalent
              upper  case  characters  when  sorting so that, for
              example, `b' is sorted the same way `B' is.

       _-_i     Ignore characters outside the ASCII range  040-0176
              octal (inclusive) when sorting.

       _-_M     An  initial  string,  consisting  of  any amount of
              white space, followed by three letters abbreviating
              a  month name, is folded to UPPER case and compared
              in the order `JAN' < `FEB' < ... < `DEC.'   Invalid
              names compare low to valid names.

       _-_n     Compare  according  to  arithmetic value an initial
              numeric string consisting of optional white  space,
              an  optional  -  sign,  and  zero  or  more digits,
              optionally followed by a decimal point and zero  or
              more digits.

       _-_r     Reverse  the  result  of  comparison, so that lines
              with greater key values appear earlier in the  out-
              put instead of later.

       Other options are:

       _-_o _o_u_t_p_u_t_-_f_i_l_e
              Write output to _o_u_t_p_u_t_-_f_i_l_e instead of to the stan-
              dard output.  If _o_u_t_p_u_t_-_f_i_l_e is one  of  the  input
              files,  ssoorrtt  copies  it to a temporary file before
              sorting and writing the output to _o_u_t_p_u_t_-_f_i_l_e.

       _-_t _s_e_p_a_r_a_t_o_r
              Use character _s_e_p_a_r_a_t_o_r as the field separator when
              finding  the  sort  keys in each line.  By default,
              fields are separated by the empty string between  a



FSF                     GNU Text Utilities                      2





SORT(1L)                                                 SORT(1L)


              non-whitespace  character  and a whitespace charac-
              ter.  That is to say, given the input  line  `  foo
              bar', ssoorrtt breaks it into fields ` foo' and ` bar'.
              The field separator is not considered to be part of
              either  the  field preceding or the field following
              it.

       _-_u     For the default case or the _-_m option, only  output
              the  first  of  a  sequence  of  lines that compare
              equal.  For the _-_c option, check that  no  pair  of
              consecutive lines compares equal.

       _+_P_O_S_1 _[_-_P_O_S_2_]
              Specify  a field within each line to use as a sort-
              ing key.  The field consists of the portion of  the
              line starting at POS1 and up to (but not including)
              POS2 (or to the end of the  line  if  POS2  is  not
              given).   The  fields  and  character positions are
              numbered starting with 0.

       _-_k _P_O_S_1_[_,_P_O_S_2_]
              An alternate syntax for  specifying  sorting  keys.
              The  fields  and  character  positions are numbered
              starting with 1.

       A position has the form _f._c, where _f is the number of  the
       field  to  use  and _c is the number of the first character
       from the beginning of the field (for _+_p_o_s) or from the end
       of  the previous field (for _-_p_o_s).  The ._c part of a posi-
       tion may be omitted in which case it is taken  to  be  the
       first  character  in the field.  If the _-_b option has been
       given, the ._c part of a  field  specification  is  counted
       from  the first nonblank character of the field (for _+_p_o_s)
       or from the first nonblank character following the  previ-
       ous field (for _-_p_o_s).

       A  _+_p_o_s  or  _-_p_o_s argument may also have any of the option
       letters _M_b_d_f_i_n_r appended to it, in which case  the  global
       ordering  options  are not used for that particular field.
       The _-_b option may be independently attached to  either  or
       both  of the _+_p_o_s and _-_p_o_s parts of a field specification,
       and if it is inherited from the global options it will  be
       attached  to  both.   If  a  _-_n or _-_M option is used, thus
       implying a _-_b option, the _-_b option is taken to  apply  to
       both  the  _+_p_o_s and the _-_p_o_s parts of a key specification.
       Keys may span multiple fields.

       In addition, when GNU jjooiinn is  invoked  with  exactly  one
       argument, the following options are recognized:

       _-_-_h_e_l_p Print  a  usage message on standard output and exit
              successfully.





FSF                     GNU Text Utilities                      3





SORT(1L)                                                 SORT(1L)


       _-_-_v_e_r_s_i_o_n
              Print version information on standard  output  then
              exit successfully.

CCOOMMPPAATTIIBBIILLIITTYY
       Historical (BSD and System V) implementations of ssoorrtt have
       differed in their interpretation of some options, particu-
       larly  _-_b,  _-_f, and _-_n.  GNU sort follows the POSIX behav-
       ior, which is usually (but not always!) like the System  V
       behavior.   According  to  POSIX  _-_n no longer implies _-_b.
       For consistency, _-_M has been  changed  in  the  same  way.
       This  may  affect  the  meaning  of character positions in
       field specifications in obscure cases.  If this bites  you
       the fix is to add an explicit _-_b.

BBUUGGSS
       The  different  meaning  of  field  numbers  depending  on
       whether _-_k is used is confusing.  It's all POSIX's  fault!







































FSF                     GNU Text Utilities                      4


